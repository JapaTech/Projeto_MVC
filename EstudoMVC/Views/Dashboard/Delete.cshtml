@using EstudoMVC.ViewModels;
@using EstudoMVC.DataContent.Enum;
@using EstudoMVC.Services;
@model ReviewViewModel;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    <div class="container">
        <div class="col-10">
            <h5 class="h5">Editar análise</h5>
        </div>
        <div class="col-10">
            <form method="post" asp-controller="Dashboard" asp-action="Delete" enctype="multipart/form-data">
                <input type="hidden" asp-for="Id" />
                <div class="form-group mb-3">
                    <textarea class="form-control" asp-for="Content" rows="10" maxlength="360" placeholder="Digite seu comentário"></textarea>
                    <span asp-validation-for="Content" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="MainExperience">Expiriência Principal</label>
                    <div class="form-check form-check-inline">
                        @foreach (var experience in Enum.GetValues(typeof(ExperienceType)).Cast<ExperienceType>())
                        {
                            <div class="form-check form-check-inline">
                                <input type="radio" class="form-check-input" asp-for="MainExperience" value="@experience" id="mainExperience_@experience" />
                                <label class="form-check-label" asp-for="MainExperience" for="mainExperience_@experience">@experience.GetDescription()</label>
                            </div>
                        }
                    </div>
                    <span asp-validation-for="MainExperience" class="text-danger"></span>
                </div>
                <div class="form-group mb-3">
                    <label asp-for="SideExperience">Expiriência Secundária (Opcional)</label>
                    <div class="form-check form-check-inline">
                        <input type="radio" class="form-check-input" asp-for="SideExperience" value="" id="sideExperience_none" />
                        <label class="form-check-label" asp-for="SideExperience" for="sideExperience_none">Nenhuma</label>
                    </div>
                    <div class="form-check form-check-inline">
                        @foreach (var experience in Enum.GetValues(typeof(ExperienceType)).Cast<ExperienceType>())
                        {
                            <div class="form-check form-check-inline">
                                <input type="radio" class="form-check-input" asp-for="SideExperience" value="@experience" id="sideExperience_@experience" />
                                <label class="form-check-label" asp-for="SideExperience" for="sideExperience_@experience">@experience.GetDescription()</label>
                            </div>
                        }
                    </div>
                    <span asp-validation-for="SideExperience" class="text-danger"></span>
                </div>
                <div class="form-check form-check-inline">
                    @foreach (var score in Enum.GetValues(typeof(Score)).Cast<Score>())
                    {
                        <div class="form-check form-check-inline">
                            <input type="radio" class="form-check-input" asp-for="Score" value="@score" id="@score" />
                            <label class="form-check-label" asp-for="Score" for="@score">@score.GetDescription()</label>
                        </div>
                    }
                </div>
                <span asp-validation-for="Score" class="text-danger"></span>

                <button type="submit" class="btn btn-primary">Enviar</button>
            </form>
            <div class="form-group">
                <form action="Delete" method="post">
                    <input type="hidden" asp-for="Id" />
                    <input type="submit" value="Confirm" class="btn btn-danger float-sm-start mt-3" />
                </form>
            </div>
        </div>
    </div>
}
