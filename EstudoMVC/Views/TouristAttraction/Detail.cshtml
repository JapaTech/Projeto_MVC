@using EstudoMVC.ViewModels;
@using EstudoMVC.DataContent.Enum;
@using EstudoMVC.Services;
@model TouristAttractionReviewViewModel;
@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
<style>
    .fake-input {
        cursor: text;
        color: #6c757d;
    }

        .fake-input:focus {
            outline: none;
            border-color: #80bdff;
            box-shadow: 0 0 0 0.2rem rgba(0, 123, 255, 0.25);
        }
</style>

<div class="container mt-4">
    <div class="row align-items-lg-start mb-4">
        <div class="col-md-4">
            <div class="border p-4 justify-content-center text-center">
                <h1 class="h3">@Model.Attraction.Name</h1>
                <img src="@Model.Attraction.Image" alt="@Model.Attraction.Name" class="rounded" style="object-fit: contain; width: 100%; height: 320px;" />
                <p class="mt-3">@Model.Attraction.Description</p>
            </div>
        </div>
        <div class="col-md-6">
            <div class="input-group">
                <div class="form-control fake-input" data-bs-toggle="modal" data-bs-target="#addReviewModal" role="button">
                    Adicione uma análise
                </div>
                @* <input type="text" class="form-control" placeholder="Adione uma análise" aria-label="Adicione uma análise" />
                <button type="button" class=" btn btn-link text-primary" data-bs-toggle="modal" data-bs-target="#addReviewModal" style="text-decoration: none; font-weight: normal; padding-left: 0;">
                Adicionar comentário
                </button> *@
            </div>
            <div class="p-4 mt-3">
                @foreach (var analise in Model.Reviews)
                {
                    <div class="rounded border border-secondary mb-3 p-4"> 
                        
                        <div class="d-flex py-1 align-content-center">
                            <h5 class="h4">@analise.User.UserName</h5>
                            <span class="h6 px-5">@analise.CreationDate</span>
                        </div>
                        
                        <div class="mt-3 rounded border-2 border-success">
                            <p class="p-4">@analise.Content</p>
                        </div>
                        <div class="card">
                            <div class="card-header">
                                Experiências do usuário
                            </div>
                            <div class="card-body">
                                <div class="d-flex align-items-center gap-2">
                                    <span class="rounded p-2" style="background-color: #87cceb">
                                        Principal: @analise.MainExperience.GetDescription()
                                    </span>
                                    @if (analise.SideExperience != null)
                                    {
                                        <span class="rounded p-2" style="background-color: #d3d3d3">Secundária: @analise.SideExperience.GetDescription()</span>
                                    }
                                </div>
                            </div>
                            <div class="card-footer">
                                <span>@analise.Score</span>
                            </div> 
                        </div>
                    </div>
                }
            </div>

            <!--Modal-->
            <div class="modal fade" id="addReviewModal" tabindex="-1" role="dialog" aria-labelledby="addReviewModalLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="addReviewModalLabel">Adicionar análise</h5>
                            <button type="button" class="close" data-bs-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <form method="post" asp-controller="Review" asp-action="Create">

                                <input type="hidden" asp-for="Attraction.Id" />

                                <div class="form-group mb-3">
                                    <textarea class="form-control" asp-for="Review.Content" rows="10" maxlength="360" placeholder="Digite seu comentário"></textarea>
                                    <span asp-validation-for="Review.Content" class="text-danger"></span>
                                </div>
                                <div class="form-group mb-3">
                                    <label asp-for="Review.MainExperience">Expiriência Principal</label>
                                    <div class="form-check form-check-inline">
                                        @foreach (var experience in Enum.GetValues(typeof(ExperienceType)).Cast<ExperienceType>())
                                        {
                                            <div class="form-check form-check-inline">
                                                <input type="radio" class="form-check-input" asp-for="Review.MainExperience" value="@experience" id="mainExperience_@experience" />
                                                <label class="form-check-label" for="mainExperience_@experience">@experience.GetDescription()</label>
                                            </div>
                                        }
                                    </div>
                                    <span asp-validation-for="Review.MainExperience" class="text-danger"></span>
                                </div>
                                <div class="form-group mb-3">
                                    <label asp-for="Review.SideExperience">Expiriência Secundária (Opcional)</label>
                                    <div class="form-check form-check-inline">
                                        <input type="radio" class="form-check-input" asp-for="Review.SideExperience" value="" id="sideExperience_none" />
                                        <label class="form-check-label" for="sideExperience_none">Nenhuma</label>
                                    </div>
                                    <div class="form-check form-check-inline">
                                        @foreach (var experience in Enum.GetValues(typeof(ExperienceType)).Cast<ExperienceType>())
                                        {
                                            <div class="form-check form-check-inline">
                                                <input type="radio" class="form-check-input" asp-for="Review.SideExperience" value="@experience" id="sideExperience_@experience" />
                                                <label class="form-check-label" for="sideExperience_@experience">@experience.GetDescription()</label>
                                            </div>
                                        }
                                    </div>
                                    <span asp-validation-for="Review.SideExperience" class="text-danger"></span>
                                </div>
                                <div class="form-check form-check-inline">
                                    @foreach (var score in Enum.GetValues(typeof(Score)).Cast<Score>())
                                    {
                                        <div class="form-check form-check-inline">
                                            <input type="radio" class="form-check-input" asp-for="Review.Score" value="@score" id="@score" />
                                            <label class="form-check-label" for="@score">@score.GetDescription()</label>
                                        </div>
                                    }
                                </div>
                                <span asp-validation-for="Review.Score" class="text-danger"></span>
                                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                                <button type="submit" class="btn btn-primary">Enviar</button>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>